task:
  environment:
    deploy_key_secret: ENCRYPTED[3c73c561f87d2de39c00e8b44701aad9e5cf57079e8abc56077ee6cd584029f3e0f2789a74098d2e49c2ee318328e490]
    deploy_key_salt: ENCRYPTED[277a1e25420dc9db77407432e093b68006b91a02dd7b603b0dd608863e82eefa24133bca90de395a08f4368d01c9219e]

  matrix:
    - name: "Linux - TeX Live 2023"
      container:
        dockerfile: ci/texlive-2023-linux.Dockerfile
      env:
        PROTODIR: proto_tl2022

    - name: "Linux - TeX Live 2022"
      container:
        dockerfile: ci/texlive-2022-linux.Dockerfile
      env:
        PROTODIR: proto_tl2022

    - name: "Linux - TeX Live 2021"
      container:
        dockerfile: ci/texlive-2021-linux.Dockerfile
      env:
        PROTODIR: proto_tl2016

    - name: "Linux - TeX Live 2020"
      container:
        dockerfile: ci/texlive-2020-linux.Dockerfile
      env:
        PROTODIR: proto_tl2016

    - name: "Linux - TeX Live 2019"
      container:
        dockerfile: ci/texlive-2019-linux.Dockerfile
      env:
        PROTODIR: proto_tl2016

    - name: "Linux - TeX Live 2018"
      container:
        dockerfile: ci/texlive-2018-linux.Dockerfile
      env:
        PROTODIR: proto_tl2016

    - name: "Linux - TeX Live 2017"
      container:
        dockerfile: ci/texlive-2017-linux.Dockerfile
      env:
        PROTODIR: proto_tl2016

    - name: "Linux - TeX Live 2016"
      container:
        dockerfile: ci/texlive-2016-linux.Dockerfile
      env:
        PROTODIR: proto_tl2016

  decrypt_deploy_key_script: |
    curl -sflL 'https://raw.githubusercontent.com/appveyor/secure-file/fc44f5c5f2fb184fe738814f373c16cb69c30929/install.sh' | bash -e -
    if [ -z "$CIRRUS_PR" ]; then
      echo "Decrypting deploy key"
      mkdir -p "${HOME}/.ssh"
      chmod 700 "${HOME}/.ssh"
      appveyor-tools/secure-file -decrypt ci/cirrus-deploy-key.enc -secret ${deploy_key_secret} -salt ${deploy_key_salt} -out "${HOME}/.ssh/id_ed25519"
      chmod 600 "${HOME}/.ssh/id_ed25519"
      echo "Testing deploy key"
      (ssh -o StrictHostKeyChecking=no -T git@github.com || true)
    fi

  install_script:
    - pdfinfo -v
    - compare -version
    - gs -v
    - pdflatex -version
    - tlmgr conf
    - make install CONTINUE=y
    - texhash

  test_script:
    - make -C test PYTHON=python3 PROTODIR=${PROTODIR}

  on_failure:
    set_failure_result_code_script:
      - echo "TEST_RESULT_CODE=1" >> $CIRRUS_ENV

  always:
    set_success_result_code_script: |
      if [ -z "$TEST_RESULT_CODE" ]; then
        echo "TEST_RESULT_CODE=0" >> $CIRRUS_ENV
      fi

    after_script:
      - echo "Test result code: $TEST_RESULT_CODE"
      - ci/cirrus_linux_after.sh $TEST_RESULT_CODE
