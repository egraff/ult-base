% Copyright (c) 2015 Erlend Graff <erlend.graff@gmail.com>

\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{ult-custom-listings}[2015/11/05 v1.1a UiT LaTeX template custom listings]

\RequirePackage{xpatch}
\RequirePackage{etoolbox}
\RequirePackage{ltxcmds}

% Insane hack that allows us to create listing environments that are counted and referenced separately
% (\lstnewenvironment is really, really stupid...)
% We provide the command \newcustomlstenvironment instead, which behaves almost identical to \lstnewenvironment.
% Example:
%   \newcustomlstenvironment{alglisting}{loalg}{Algorithm}[1][]{
%     \lstset{...,#1}
%   }{}
%
% Then, you can either use \begin{alglisting}...\end{alglisting}, or use the \lstinputalglisting command.
% Tip: create a convenient \listofalglisting macro by using:
%   \newlistof{alglisting}{loalg}{List of Algorithms}
% after defining the new listing environment. It is also possible to use \listof{alglisting}{List of Algorithms} instead.
\AtBeginDocument{%
  \global\@namedef{cmdname@lst@MakeCaption}{lst@MakeCaption}%

  \@ifpackageloaded{caption}{%
    % If hyperref is loaded before caption, then hyperref will have wrapped \lst@MakeCaption first in \NROrg@lst@MakeCaption
    \xpatchcmd\caption@ORI@lst@MakeCaption{\NROrg@lst@MakeCaption}{\NROrg@lst@MakeCaption}%
      {%
        \global\@namedef{cmdname@lst@MakeCaption}{NROrg@lst@MakeCaption}%
        \global\@namedef{cmdname@caption@lst@MakeCaption}{lst@MakeCaption}%
      }{%
        \global\@namedef{cmdname@lst@MakeCaption}{caption@ORI@lst@MakeCaption}%
        \@ifpackageloaded{hyperref}{%
          \global\@namedef{cmdname@caption@lst@MakeCaption}{NROrg@lst@MakeCaption}%
        }{%
          \global\@namedef{cmdname@caption@lst@MakeCaption}{lst@MakeCaption}%
        }%
      }%
  }{}%
  \@ifpackageloaded{hyperref}{%
    \AfterEndPreamble{%
      % If caption is loaded before hyperref, then caption will have wrapped \lst@MakeCaption first in \caption@ORI@lst@MakeCaption
      \xpatchcmd\NROrg@lst@MakeCaption{\caption@ORI@lst@MakeCaption}{\caption@ORI@lst@MakeCaption}%
        {%
          \global\@namedef{cmdname@lst@MakeCaption}{caption@ORI@lst@MakeCaption}%
        }{%
          \global\@namedef{cmdname@lst@MakeCaption}{NROrg@lst@MakeCaption}%
        }%
    }%
  }{}%

  % Define convenient macro for patching the actual (potentially wrapped) \lst@MakeCaption
  \gdef\@patch@lst@MakeCaption#1#2#3#4{%
    \expandafter\xpatchcmd\csname\cmdname@lst@MakeCaption\endcsname
      {#1}{#2}{#3}{#4}%
  }%
  \gdef\@patch@nofail@lst@MakeCaption#1#2{%
    \@patch@lst@MakeCaption
      {#1}%
      {#2}%
      {}%
      {%
        \PackageError
          {ult-custom-listings}
          {Failed to patch \string\lst@MakeCaption}
          {%
            \string\lst@MakeCaption = \meaning\lst@MakeCaption\MessageBreak\MessageBreak
            \@backslashchar\cmdname@lst@MakeCaption = \expandafter\meaning\csname\cmdname@lst@MakeCaption\endcsname\MessageBreak\MessageBreak
            \@ehd
          }%
      }%
  }%

  % Define convenient macro for patching the caption package's re-implementation of \lst@MakeCaption
  \gdef\@patch@caption@lst@MakeCaption#1#2#3#4{%
    \@ifundefined{cmdname@caption@lst@MakeCaption}{}{%
      \expandafter\xpatchcmd\csname\cmdname@caption@lst@MakeCaption\endcsname
        {#1}{#2}{#3}{#4}%
    }%
  }%
  \gdef\@patch@nofail@caption@lst@MakeCaption#1#2{%
    \@patch@caption@lst@MakeCaption
      {#1}%
      {#2}%
      {}%
      {%
        \PackageError
          {ult-custom-listings}
          {Failed to patch caption's \string\lst@MakeCaption}
          {%
            \string\lst@MakeCaption = \meaning\lst@MakeCaption\MessageBreak\MessageBreak
            \@backslashchar\cmdname@caption@lst@MakeCaption = \expandafter\meaning\csname\cmdname@caption@lst@MakeCaption\endcsname\MessageBreak\MessageBreak
            \@ehd
          }%
      }%
  }%

  \AfterEndPreamble{%
    % Patch ToC-stuff in \lst@MakeCaption
    \global\@namedef{ext@lstlisting}{lol}%
    \global\@patch@nofail@lst@MakeCaption
      {\addcontentsline{lol}{lstlisting}}%
      {\addcontentsline{\@nameuse{ext@lstlisting}}{lstlisting}}%
    \global\@patch@nofail@lst@MakeCaption
      {\addcontentsline{lol}{lstlisting}}%
      {\addcontentsline{\@nameuse{ext@lstlisting}}{lstlisting}}%
  }%
}

\gdef\@customlstenvironmenthook#1{%
  % Override listing name as shown in caption
  \def\lstlistingname{\@nameuse{#1name}}%
  % Override counter as shown in caption
  \expandafter\let\csname c@lstlisting\expandafter\endcsname\csname c@#1\endcsname
  \expandafter\let\csname thelstlisting\expandafter\endcsname\csname the#1\endcsname
  \expandafter\let\csname theHlstlisting\expandafter\endcsname\csname theH#1\endcsname
  %
  % Prepend #1- to \theHlstnumber to make this hyperref counter unique too
  % (otherwise, hyperref will complain with "destination with the same identifier
  % (name{lstnumber.X.Y.Z}) has been already used, duplicate ignored").
  % Thanks to Heiko "the man" Oberdiek!!
  % (see https://groups.google.com/forum/#!msg/comp.text.tex/vO5PaIkhfkE/ouW-6192yd4J)
  \begingroup
    \global\let\gtmp@theHlstnumber\theHlstnumber
    \toks@\expandafter{\theHlstnumber}%
    \xdef\gtmp@theHlstnumber{#1-\the\toks@}%
  \endgroup
  \let\theHlstnumber\gtmp@theHlstnumber
  %
  % Patch \lst@MakeCaption to use the counter of our customized lstlisting environment.
  \@patch@nofail@lst@MakeCaption
    {\ifx\lst@@caption\@empty\expandafter\lst@HRefStepCounter\else
      \expandafter\refstepcounter\fi {lstlisting}}%
    {\ifx\lst@@caption\@empty\expandafter\lst@HRefStepCounter\else
      \expandafter\refstepcounter\fi {#1}}%
    {}%
    {}%
  %
  % Patch ToC output from \lst@MakeCaption so we get a separate "List of ..." for each environment.
  \@patch@nofail@lst@MakeCaption
    {\addcontentsline{\@nameuse{ext@lstlisting}}{lstlisting}\lst@name}%
    {\addcontentsline{\@nameuse{ext@#1}}{#1}\lst@name}%
  \@patch@nofail@lst@MakeCaption
    {\addcontentsline{\@nameuse{ext@lstlisting}}{lstlisting}{\protect\numberline{\thelstlisting}\lst@@caption}}%
    {\addcontentsline{\@nameuse{ext@#1}}{#1}{\protect\numberline\expandafter{\csname the#1\endcsname}\lst@@caption}}%
  %
  % Now, patch caption's implementation of \lst@MakeCaption, so we may style each environment differently using \captionsetup
  \@patch@nofail@caption@lst@MakeCaption
    {\caption@setoptions{lstlisting}}%
    {\caption@setoptions{#1}}%
  \@patch@nofail@caption@lst@MakeCaption
    {\caption@begin{lstlisting}}%
    {\caption@begin{#1}}%
  %
  % Fix for caption package change in TeX Live revision 62097:
  \ltx@ifpackagelater{caption}{2022/02/20}{%
    \@patch@nofail@caption@lst@MakeCaption
      {\caption@addcontentsline{lstlisting}}%
      {\caption@addcontentsline{#1}}%
  }{}%
}

% Usage: \newcustomlstenvironment
%          {<Environment name>}{<Aux extension>}{<Caption/autoref name>}
%          [<number>][<opt. default arg.>]{<starting code>}{<ending code>} <-- These are passed directly to \lstnewenvironment
\lst@UserCommand\newcustomlstenvironment#1#2#3#4#{%
  \newcustomlstenvironment@{#1}{#2}{#3}{#4}%
}
\gdef\newcustomlstenvironment@#1#2#3#4#5#6{%
  % Define separate counter for our customized lstlisting environment.
  % Note: only supports numbering with or without chapter number first (same as lstlisting).
  \lst@ifnumberbychapter
    \newcounter{#1}[chapter]%
    \global\@namedef{the#1}%
      {\ifnum \c@chapter>\z@ \thechapter.\fi \arabic{#1}}%
  \else
    \newcounter{#1}%
    \global\@namedef{the#1}{\arabic{#1}}%
  \fi
  %
  % Hyperref has separate counter that needs a unique name.
  % Again, thanks to Mr. Oberdiek!
  \global\@namedef{theH#1}%
    {lst.#1-\csname the\@ifundefined{theHchapter}{}{H}chapter\endcsname .\arabic{#1}}%
  %
  % Override autoref names for our environment.
  \global\@namedef{#1name}{#3}%
  \global\@namedef{#1autorefname}{#3}%
  %
  % Define aux extension
  \global\@namedef{ext@#1}{#2}%
  %
  % Create new listing environment as usual, by calling \lstnewenvironment
  % Note: #4 contains something like "[N][]", corresponding to [<number>][<opt. default arg.>]
  %       arguments of \lstnewenvironment (see listings doc, ยง4.16).
  \lstnewenvironment{#1}#4{%
    \@customlstenvironmenthook{#1}%
    %
    % Contents passed to {<starting code} of \lstnewenvrionment (e.g. \lstset{#1,..})
    #5%
  }{%
    % Contents passed to {<ending code>} of \lstnewenvironment
    #6%
  }%
  \expandafter\newcommand\csname lstinput#1\endcsname[2][]{%
    \begingroup
      \@customlstenvironmenthook{#1}%
      #5%
      \lstinputlisting{##2}% Note: we use\lstinputlisting{##2} instead of \lstinputlisting[##1]{##2}, because #5 is assumed to contain \lstset{##1}. See issue #52 on Github.
      #6%
    \endgroup
  }%
}

\endinput
